{"ast":null,"code":"import React,{useContext,useState}from\"react\";import styles from\"../Login/Login.module.css\";import{Box,Button,CircularProgress,TextField,Typography}from\"@mui/material\";import Navbar from\"../../Components/Navbar/Navbar\";import{useNavigate}from\"react-router-dom\";import{AppContext}from\"../../Context/AppContext\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const initial={email:\"\",password:\"\"};const handleSignUpClick=()=>{navigate('/signup');};const[loginData,setLoginData]=useState(initial);const{handlelogin,loginBtnLoading,setIsLoggedIn}=useContext(AppContext);const handleChange=e=>{const{name,value}=e.target;setLoginData({...loginData,[name]:value});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Typography,{className:styles.loginText,children:\"Login\"}),/*#__PURE__*/_jsxs(Box,{className:styles.loginbox,children:[/*#__PURE__*/_jsx(TextField,{label:\"Email\",placeholder:\"Enter Email Here\",variant:\"outlined\",fullWidth:true,name:\"email\",onChange:handleChange}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",placeholder:\"Enter Password Here\",variant:\"outlined\",fullWidth:true,type:\"password\",name:\"password\",onChange:handleChange}),loginBtnLoading?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsx(Button,{className:styles.loginbutton,onClick:async()=>{if(loginData.email!==\"\"&&loginData.password!==\"\"){let res=await handlelogin(loginData);if(res.status){alert(res.msg);localStorage.setItem(\"token\",res.token);localStorage.setItem(\"user\",JSON.stringify(res.user));setIsLoggedIn(true);navigate(\"/\");}else{alert(res.msg);}}else{alert(\"Please fill all fields!\");}},children:\"Login\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Don't have an account?\",\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"blue\",cursor:\"pointer\"},onClick:handleSignUpClick,children:\"Sign Up\"})]}),/*#__PURE__*/_jsx(Button,{className:styles.loginGoogle,children:\"Login With Google\"})]})]});};export default Login;","map":{"version":3,"names":["React","useContext","useState","styles","Box","Button","CircularProgress","TextField","Typography","Navbar","useNavigate","AppContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","navigate","initial","email","password","handleSignUpClick","loginData","setLoginData","handlelogin","loginBtnLoading","setIsLoggedIn","handleChange","e","name","value","target","children","className","loginText","loginbox","label","placeholder","variant","fullWidth","onChange","type","loginbutton","onClick","res","status","alert","msg","localStorage","setItem","token","JSON","stringify","user","style","color","cursor","loginGoogle"],"sources":["C:/Users/hp/Desktop/updated voosh/Voosh-Assignment/client/src/Routes/Login/Login.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"../Login/Login.module.css\";\r\nimport { Box, Button, CircularProgress, TextField, Typography } from \"@mui/material\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppContext } from \"../../Context/AppContext\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const initial = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const handleSignUpClick = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  const [loginData, setLoginData] = useState(initial);\r\n  const { handlelogin, loginBtnLoading ,setIsLoggedIn} = useContext(AppContext);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setLoginData({\r\n      ...loginData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Typography className={styles.loginText}>Login</Typography>\r\n      <Box className={styles.loginbox}>\r\n        <TextField\r\n          label=\"Email\"\r\n          placeholder=\"Enter Email Here\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password\"\r\n          placeholder=\"Enter Password Here\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        {loginBtnLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            className={styles.loginbutton}\r\n            onClick={async () => {\r\n              if (loginData.email !== \"\" && loginData.password !== \"\") {\r\n                let res = await handlelogin(loginData);\r\n                if (res.status) {\r\n                  alert(res.msg);\r\n                 \r\n                  localStorage.setItem(\"token\", res.token);\r\n                  localStorage.setItem(\"user\", JSON.stringify(res.user));\r\n                  setIsLoggedIn(true)\r\n                  navigate(\"/\");\r\n                } else {\r\n                  alert(res.msg);\r\n                }\r\n              } else {\r\n                alert(\"Please fill all fields!\");\r\n              }\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n        <Typography variant=\"body1\">\r\n          Don't have an account?{\" \"}\r\n          <span\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={handleSignUpClick}\r\n          >\r\n            Sign Up\r\n          </span>\r\n        </Typography>\r\n        <Button className={styles.loginGoogle}>Login With Google</Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}