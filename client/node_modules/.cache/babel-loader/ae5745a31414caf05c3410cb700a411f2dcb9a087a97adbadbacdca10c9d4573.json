{"ast":null,"code":"import{Button,Dialog,DialogActions,DialogContent,DialogTitle,TextField}from\"@mui/material\";import React,{useContext,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{AppContext}from\"../../Context/AppContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const init={title:\"\",description:\"\",taskdetails:\"\"};const AddTask=_ref=>{let{open,handleClose}=_ref;const[formData,setFormData]=useState(init);const navigate=useNavigate();const{handleAddTask,getAllTaskData}=useContext(AppContext);const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmitForm=async()=>{const token=localStorage.getItem(\"token\");if(!token){navigate(\"/login\");}else{if(formData.title!=\"\"&&formData.description!=\"\"&&formData.taskdetails!=\"\"){try{let res=await handleAddTask({...formData,status:'pending'},token);console.log(\"response\",res);alert(\"Item Added Successfully\");await getAllTaskData();handleClose();}catch(err){alert(\"Failed to add the product\");}}else{alert(\"All fields are mandatory\");}}};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"ADD TASK\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"name\",label:\"Title\",type:\"text\",fullWidth:true,variant:\"outlined\",name:\"title\",onChange:e=>handleChange(e)}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"name\",label:\"Description\",type:\"text\",fullWidth:true,variant:\"outlined\",name:\"description\",onChange:e=>handleChange(e)}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"name\",label:\"Task Details\",type:\"text\",fullWidth:true,variant:\"outlined\",name:\"taskdetails\",onChange:e=>handleChange(e)})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleSubmitForm,variant:\"contained\",children:\"Submit\"})})]});};export default AddTask;","map":{"version":3,"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","React","useContext","useState","useNavigate","AppContext","jsx","_jsx","jsxs","_jsxs","init","title","description","taskdetails","AddTask","_ref","open","handleClose","formData","setFormData","navigate","handleAddTask","getAllTaskData","handleChange","e","name","value","target","handleSubmitForm","token","localStorage","getItem","res","status","console","log","alert","err","onClose","children","autoFocus","margin","id","label","type","fullWidth","variant","onChange","onClick"],"sources":["C:/Users/hp/Desktop/updated voosh/Voosh-Assignment/client/src/Components/AddTaskPopups/AddTaskPopups.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppContext } from \"../../Context/AppContext\";\r\n\r\nconst init = {\r\n  title: \"\",\r\n  description: \"\",\r\n  taskdetails: \"\",\r\n};\r\nconst AddTask = ({ open, handleClose }) => {\r\n  const [formData, setFormData] = useState(init);\r\n  const navigate = useNavigate();\r\n  const { handleAddTask, getAllTaskData } = useContext(AppContext);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const handleSubmitForm = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (\r\n        formData.title != \"\" &&\r\n        formData.description != \"\" &&\r\n        formData.taskdetails != \"\"\r\n      ) {\r\n        try{\r\n        let res = await handleAddTask({...formData,status:'pending'}, token);\r\n        console.log(\"response\",res)\r\n          alert(\"Item Added Successfully\");\r\n          await getAllTaskData();\r\n          handleClose();\r\n        } catch(err) {\r\n          alert(\"Failed to add the product\");\r\n        }\r\n      } else {\r\n        alert(\"All fields are mandatory\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>ADD TASK</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"title\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Description\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"description\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Task Details\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"taskdetails\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleSubmitForm} variant=\"contained\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}