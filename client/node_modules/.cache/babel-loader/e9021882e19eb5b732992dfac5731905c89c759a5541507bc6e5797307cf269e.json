{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\updated voosh\\\\Voosh-Assignment\\\\client\\\\src\\\\Routes\\\\Signup\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport styles from \"../Signup/Signup.module.css\";\nimport { Button, TextField, Typography, Box, CircularProgress } from \"@mui/material\";\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate();\n  const initial = {\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Password: \"\"\n  };\n  const handleLoginClick = () => {\n    navigate('/login');\n  };\n  const {\n    handleAddsignup,\n    signupBtnLoading\n  } = useContext(AppContext);\n  const [signupData, setSignupData] = useState(initial);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupData({\n      ...signupData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: styles.loginText,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.loginbox,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"First Name\",\n        placeholder: \"Enter First Name\",\n        variant: \"outlined\",\n        name: \"FirstName\",\n        fullWidth: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Last Name\",\n        placeholder: \"Enter Last Name\",\n        variant: \"outlined\",\n        name: \"LastName\",\n        fullWidth: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        placeholder: \"Enter Email\",\n        variant: \"outlined\",\n        name: \"Email\",\n        fullWidth: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        placeholder: \"Enter Password\",\n        variant: \"outlined\",\n        name: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), signupBtnLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.loginbutton,\n        onClick: async () => {\n          if (signupData.FirstName && signupData.LastName && signupData.Email && signupData.Password) {\n            let res = await handleAddsignup(signupData);\n            if (res.status) {\n              alert(res.msg);\n              navigate(\"/login\");\n            } else {\n              alert(res.msg);\n            }\n          } else {\n            alert(\"Please fill all fields!\");\n          }\n        },\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"blue\",\n            cursor: \"pointer\"\n          },\n          onClick: handleLoginClick,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.loginGoogle,\n        children: \"Signup With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"Fsekxr8mOpsILu1FV1HIyKLDq68=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useContext","useState","styles","Button","TextField","Typography","Box","CircularProgress","Navbar","useNavigate","AppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","navigate","initial","FirstName","LastName","Email","Password","handleLoginClick","handleAddsignup","signupBtnLoading","signupData","setSignupData","handleChange","e","name","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","className","loginText","loginbox","label","placeholder","variant","fullWidth","onChange","type","loginbutton","onClick","res","status","alert","msg","style","color","cursor","loginGoogle","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/updated voosh/Voosh-Assignment/client/src/Routes/Signup/Signup.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"../Signup/Signup.module.css\";\r\nimport { Button, TextField, Typography, Box, CircularProgress } from \"@mui/material\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppContext } from \"../../Context/AppContext\";\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const initial = {\r\n    FirstName: \"\",\r\n    LastName: \"\",\r\n    Email: \"\",\r\n    Password: \"\"\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  const { handleAddsignup, signupBtnLoading } = useContext(AppContext);\r\n\r\n  const [signupData, setSignupData] = useState(initial);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignupData({\r\n      ...signupData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Typography className={styles.loginText}>Signup</Typography>\r\n      <Box className={styles.loginbox}>\r\n        <TextField\r\n          label=\"First Name\"\r\n          placeholder=\"Enter First Name\"\r\n          variant=\"outlined\"\r\n          name=\"FirstName\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          label=\"Last Name\"\r\n          placeholder=\"Enter Last Name\"\r\n          variant=\"outlined\"\r\n          name=\"LastName\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          placeholder=\"Enter Email\"\r\n          variant=\"outlined\"\r\n          name=\"Email\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          placeholder=\"Enter Password\"\r\n          variant=\"outlined\"\r\n          name=\"Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n        />\r\n        {signupBtnLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            className={styles.loginbutton}\r\n            onClick={async () => {\r\n              if (\r\n                signupData.FirstName &&\r\n                signupData.LastName &&\r\n                signupData.Email &&\r\n                signupData.Password\r\n              ) {\r\n                let res = await handleAddsignup(signupData);\r\n                if (res.status) {\r\n                  alert(res.msg);\r\n                  navigate(\"/login\");\r\n                } else {\r\n                  alert(res.msg);\r\n                }\r\n              } else {\r\n                alert(\"Please fill all fields!\");\r\n              }\r\n            }}\r\n          >\r\n            Signup\r\n          </Button>\r\n        )}\r\n        <Typography variant=\"body1\">\r\n          Already have an account?{\" \"}\r\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={handleLoginClick}>Login</span>\r\n        </Typography>\r\n        <Button className={styles.loginGoogle}>Signup With Google</Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}